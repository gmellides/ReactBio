{"version":3,"sources":["res/image.jpg","components/WorkingExperience.js","containers/Work.js","containers/Education.js","containers/PersonalInfo.js","containers/Footer.js","components/NotableProject.js","containers/NotableProjects.js","components/Graphics.js","containers/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","WorkingExperience","_Component","props","context","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","url","react_default","a","createElement","ListGroupItem","Button","href","placement","variant","react_fontawesome_index_es","icon","faGlobe","Card","Body","Title","title","Subtitle","className","company","city","period","Text","description","ListGroup","skills","map","item","Badge","pill","CompanyURL","Component","Work","_this","state","index","WorkingPositions","JSON","parse","stringify","work_data","workPlacement","Row","Col","WorkingExperience_WorkingExperience","Segment","Icon","name","Education","edu_data","Education_Json","schoolData","Container","school","thesisData","Card_Card","Content","Header","thesis_title","Meta","Description","internshipData","internship_title","faUniversity","Grid","columns","Column","renderSchool","renderInternship","renderThesis","PersonalInfo","personal_data","per_data_file","Image","src","imag","Width","responsive","rounded","firstname","lastname","info","es_Container","data","split","skillset","OverlayTrigger","overlay","Tooltip","id","concat","social_media","sm","size","renderPhoto","renderInfo","renderSkills","renderSocialMedia","Footer","apply","arguments","NotableProject","proj","project_name","type","repo_url","NotableProjects","notable_projects","notable_data","faFileCode","NotableProject_NotableProject","Graphics","width","height","xmlns","fill","y","x","display","overflow","stroke-width","stroke","opacity","stroke-linecap","stroke-linejoin","y2","x2","y1","x1","transform","d","fill-opacity","stroke-opacity","renderConnection","HomePage","skills_data","skills_data_file","console","log","ry","rx","cy","cx","PersonalInfo_PersonalInfo","Work_Work","centered","Graphics_Graphics","connectionType","Education_Education","NotableProjects_NotableProjects","Footer_Footer","App","library","add","faStroopwafel","HomePage_HomePage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2ce206a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.d0e6de39.jpg\";","import React, { Component } from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faGlobe} from '@fortawesome/free-solid-svg-icons'; \r\nimport {Card,Button,ListGroup,Badge,ListGroupItem} from 'react-bootstrap';\r\nimport './WorkingExperience.css';\r\n\r\nexport class WorkingExperience extends Component{\r\n   \r\n    constructor(props, context) {\r\n        super(props, context);\r\n    }\r\n\r\n    CompanyURL (url){\r\n        if (url != \"\"){\r\n            return(\r\n                <ListGroupItem>\r\n                    <Button href={this.props.placement.url} variant=\"primary\">\r\n                        <FontAwesomeIcon icon={faGlobe} />\r\n                        Visit Website\r\n                    </Button>\r\n                </ListGroupItem>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Card>\r\n                <Card.Body>\r\n                <Card.Title>{this.props.placement.title}</Card.Title>\r\n                <Card.Subtitle>\r\n                    <span className='company'>{this.props.placement.company}, {this.props.placement.city}</span> <br></br>\r\n                    <span className='date'>{this.props.placement.period}</span>\r\n                </Card.Subtitle>\r\n                <Card.Text>{this.props.placement.description}</Card.Text>\r\n                </Card.Body>\r\n                <ListGroup>\r\n                    <ListGroupItem>\r\n                        {\r\n                            this.props.placement.skills.map((item)=>{  \r\n                                return(\r\n                                    <Badge pill className=\"working-skill-style\" variant=\"info\">\r\n                                        {item}\r\n                                    </Badge>\r\n                               );\r\n                            })\r\n                        }\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n                {\r\n                    this.CompanyURL(this.props.placement.url)\r\n                }\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { WorkingExperience } from '../components/WorkingExperience';\r\nimport work_data from '../data/working_experiense.json';\r\nimport './Work.css';\r\n\r\nexport class Work extends Component{\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            index:\"\"\r\n        }\r\n        this.state.index = 0;\r\n        this.state.WorkingPositions = JSON.parse(JSON.stringify(work_data));\r\n    }\r\n        \r\n    //return column ******input JSON Object (parse it inside component)\r\n    newRow(workPlacement){ \r\n        return(\r\n           <Row>\r\n                <Col>\r\n                 <WorkingExperience placement = {workPlacement}/>\r\n                </Col>\r\n           </Row>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Segment>\r\n                <h2 className=\"cat-work-header\">\r\n                    <Icon name='building'/>\r\n                    Working Experience\r\n                </h2>\r\n                <Row>  \r\n                    { \r\n                        this.state.WorkingPositions.map( (item,index) => {\r\n                            if (index <= 1){\r\n                                return(\r\n                                    <Col>\r\n                                        <WorkingExperience placement={item}/>\r\n                                    </Col>\r\n                                );  \r\n                            }\r\n                        })\r\n                    }\r\n                </Row>\r\n            </Segment>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUniversity } from '@fortawesome/free-solid-svg-icons'\r\nimport {Segment,Card, Grid,Container} from 'semantic-ui-react';\r\nimport {Button} from 'react-bootstrap';\r\nimport Education_Json from '../data/education_info.json';\r\nimport './Education.css';\r\n\r\nexport class Education extends Component{\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            edu_data:\"\"\r\n        }\r\n        this.state.edu_data = JSON.parse(JSON.stringify(Education_Json));\r\n    }\r\n    \r\n    renderSchool(schoolData){ \r\n        return(\r\n           <Container>\r\n              <h1 className=\"edu-school-title\">{schoolData.title}</h1>  \r\n              <h2 className=\"edu-school\">{schoolData.school}</h2>\r\n              <h3 className=\"edu-period\">{schoolData.period}</h3>\r\n          </Container>\r\n        );\r\n    }\r\n    renderThesis(thesisData){ \r\n        return(\r\n            <Container>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>{thesisData.thesis_title}</Card.Header>\r\n                        <Card.Meta className=\"edu-period\">{thesisData.period}</Card.Meta>\r\n                        <Card.Description>{thesisData.description}</Card.Description>\r\n                    </Card.Content>\r\n                    <Button href={thesisData.url} ></Button>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }   \r\n    renderInternship(internshipData){ \r\n        return(\r\n            <Container>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>{internshipData.internship_title}</Card.Header>\r\n                        <Card.Meta>internshipData.period</Card.Meta>\r\n                        <Card.Description>Matthew is a pianist living in Nashville.</Card.Description>\r\n                    </Card.Content>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Segment>\r\n                <h2 className=\"edu-header\">\r\n                    <FontAwesomeIcon icon={faUniversity} />\r\n                    Education\r\n                </h2>\r\n                <Container>\r\n                    <Grid columns={2}>\r\n                        <Grid.Column>\r\n                           <Grid.Row>\r\n                                {this.renderSchool(this.state.edu_data[0])}\r\n                           </Grid.Row>\r\n                           <Grid.Row>\r\n                               <Container>\r\n                                {this.renderInternship(this.state.edu_data[2])}\r\n                               </Container>  \r\n                           </Grid.Row>\r\n                        </Grid.Column>\r\n\r\n                        <Grid.Column>\r\n                            <Container>\r\n                                {this.renderThesis(this.state.edu_data[1])}\r\n                            </Container>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n               \r\n                </Container>\r\n                \r\n            </Segment>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as icon from '@fortawesome/free-solid-svg-icons'\r\nimport {Badge,Row,Container,Image,Button,Col,OverlayTrigger,Tooltip} from 'react-bootstrap';\r\nimport imag from '../res/image.jpg';\r\nimport per_data_file from '../data/personal_information.json';\r\nimport './PersonalInfo.css';\r\n\r\nexport class PersonalInfo extends Component{\r\n    \r\n    constructor(props, context) {\r\n        super(props, context);\r\n        // Init state\r\n        this.state = {\r\n            personal_data : \"\"\r\n        }\r\n        // Parse JSON with personal Data and pass it to Current State.\r\n        this.state.personal_data = JSON.parse(JSON.stringify(per_data_file));\r\n    }\r\n    \r\n    // Render Row Data to Personal Info Component.\r\n    renderPhoto(){\r\n        return(\r\n            <Row>\r\n                <Col>\r\n                    <Image src={imag} Width=\"170px\" responsive rounded />\r\n                </Col>\r\n                <Col className=\"per-name\">\r\n                    <h2 className=\"per-name\">\r\n                        {this.state.personal_data[0].firstname} {this.state.personal_data[0].lastname} \r\n                    </h2>\r\n                    <h4 className=\"per-title\">\r\n                        {this.state.personal_data[0].title}\r\n                    </h4>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    renderInfo(info){\r\n        return(\r\n            <Container>\r\n                <h1>Information</h1>\r\n                {\r\n                  info.map( (item) => \r\n                    {\r\n                        var data = item.split(',');\r\n                        return(\r\n                            <div>\r\n                                <FontAwesomeIcon icon={data[2]} />\r\n                                <label>{data[0]} {data[1]}</label>  \r\n                            </div>\r\n                        )\r\n                    }\r\n                  )  \r\n                } \r\n            </Container>\r\n        );\r\n    }\r\n\r\n    renderSkills(){\r\n        return(\r\n            <Container>\r\n                <h1 className =\"cat-info-header\">Skills</h1>\r\n                {\r\n                    this.state.personal_data[0].skillset.map(\r\n                        function (item){\r\n                            var data  = item.split(\",\");\r\n                            return (\r\n                                <OverlayTrigger\r\n                                    key={`bottom`}\r\n                                    placement={`bottom`}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${`bottom`}`}>\r\n                                            {data[1]}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <Badge pill className=\"skill-style\" variant=\"info\">\r\n                                        {data[0]}\r\n                                    </Badge>\r\n                                </OverlayTrigger>\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n      \r\n    // Render Social Media Buttons\r\n    renderSocialMedia(social_media){ \r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <label className=\"per-contactMe\">Contact Me:</label>\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                        {\r\n                            social_media.map((item) => {\r\n                                var data = item.split(',')\r\n                                return (\r\n                                    <Button variant=\"outline-secondary\" className=\"contact-btn\" href={data[1]} size=\"sm\">\r\n                                        {data[0]}\r\n                                    </Button>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>   \r\n        );\r\n    }   \r\n\r\n    // -------------------\r\n    render(){\r\n        /// call func save to state \r\n        return(      \r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        {this.renderPhoto()}\r\n                    </Col>\r\n                    <Col>\r\n                        {this.renderInfo(this.state.personal_data[0].info)}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {this.renderSkills()}\r\n                </Row>\r\n                <Row className=\"social-topic\">\r\n                    {this.renderSocialMedia(this.state.personal_data[0].social_media)}\r\n                </Row>\r\n            </Container>             \r\n        );\r\n    }\r\n}\r\n//   {this.renderSkills()}","import React,{ Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport './Footer.css';\r\n\r\nexport class Footer extends Component{\r\n    \r\n    render(){ \r\n        return(\r\n            <div className=\"footer-container\">\r\n                <Grid.Row>\r\n                    <h4 className=\"footer-text\">Created by Gabriel Mellides Copyright 2019</h4>\r\n                </Grid.Row>\r\n            </div>\r\n        );\r\n    }   \r\n\r\n}","import React, {Component} from 'react'; \r\nimport { Card,Button } from 'react-bootstrap';\r\nimport './NotableProject.css';\r\n\r\nexport class NotableProject extends Component{\r\n\r\n    constructor(props, context) {\r\n        super(props, context); \r\n    }\r\n\r\n    // Project Card builder \r\n    render(){ \r\n        return( \r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.proj.project_name}</Card.Title>\r\n                <Card.Subtitle>\r\n                    <span>{this.props.proj.type}</span> <br></br>\r\n                    <span className=\"not-period\">{this.props.proj.period}</span>\r\n                </Card.Subtitle>\r\n                 <Card.Text>{this.props.proj.description}</Card.Text>\r\n                </Card.Body>\r\n                <Button href={this.props.proj.repo_url} variant=\"primary\">View Source Code</Button>\r\n            </Card>\r\n        );\r\n    }\r\n}   ","import React, {Component} from 'react';\r\nimport {Segment} from 'semantic-ui-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faFileCode} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport { NotableProject } from '../components/NotableProject.js';\r\nimport notable_data from '../data/notable_projects.json';\r\nimport './NotableProjects.css';\r\n\r\nexport class NotableProjects extends Component{\r\n   \r\n   constructor(props, context) {\r\n      super(props, context);\r\n      this.state = {\r\n         notable_projects:\"\"\r\n     }\r\n     this.state.notable_projects = JSON.parse(JSON.stringify(notable_data));\r\n   }\r\n   \r\n   render(){ \r\n      return( \r\n         <Segment>\r\n            <h2>\r\n            <FontAwesomeIcon icon={faFileCode} />\r\n            Notable Projects</h2>\r\n            <Row>\r\n               { \r\n                  this.state.notable_projects.map( (item) => {          \r\n                     return(\r\n                        <Col>\r\n                              <NotableProject proj={item}/>\r\n                        </Col>\r\n                     );\r\n                  })\r\n               }\r\n            </Row> \r\n         </Segment>\r\n      );\r\n   }\r\n} ","import React, {Component} from 'react'; \r\n\r\nexport class Graphics extends Component{\r\n    \r\n    renderConnection(){ \r\n        return(\r\n            <svg width=\"30.000000000000004\" height=\"70\" xmlns=\"http://www.w3.org/2000/svg\">          \r\n                <g>\r\n                    <title>background</title>\r\n                    <rect fill=\"#fff\" id=\"canvas_background\" height=\"72\" width=\"32\" y=\"-1\" x=\"-1\"/>\r\n                    <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n                        <rect fill=\"url(#gridpattern)\" stroke-width=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                    <title>Layer 1</title>\r\n                    <line stroke=\"#00b5ad\" opacity=\"0.55\" stroke-linecap=\"undefined\" stroke-linejoin=\"undefined\" id=\"svg_1\" y2=\"48.879461\" x2=\"15.354493\" y1=\"10.588235\" x1=\"15.354493\" stroke-width=\"6.5\" fill=\"none\"/>\r\n                    <path stroke=\"#00b5ad\" transform=\"rotate(89 14.994493484497065,54.712287902832045) \" id=\"svg_2\" d=\"m7.222947,62.23669l7.252207,-7.526236l-7.252207,-7.52629l4.145004,-4.301184l11.398091,11.827474l-11.398091,11.831143\" fill-opacity=\"null\" stroke-width=\"2.5\" fill=\"none\"/>\r\n                    <path stroke=\"#00b5ad\" id=\"svg_3\" d=\"m5.799024,14.712828l0,0c0,-5.197971 4.257682,-9.411759 9.509798,-9.411759l0,0c2.522154,0 4.94101,0.991593 6.724441,2.75664c1.783434,1.765048 2.785357,4.158965 2.785357,6.655119l0,0c0,5.19797 -4.257682,9.411759 -9.509798,9.411759l0,0c-5.252115,0 -9.509798,-4.213789 -9.509798,-9.411759zm4.754899,0l0,0c0,2.598985 2.128842,4.70588 4.754899,4.70588c2.626059,0 4.754899,-2.106895 4.754899,-4.70588c0,-2.598985 -2.128842,-4.70588 -4.754899,-4.70588l0,0c-2.626057,0 -4.754899,2.106896 -4.754899,4.70588z\" fill-opacity=\"null\" stroke-opacity=\"null\" stroke-width=\"2.5\" fill=\"none\"/>\r\n                </g>\r\n           </svg>\r\n        );\r\n    }   \r\n\r\n    render(){ \r\n        // console.log(this.props.connectionType);\r\n        return(this.renderConnection());\r\n    }\r\n     \r\n}   ","import React, {Component} from 'react';\r\nimport { Container,Grid } from 'semantic-ui-react';\r\nimport { Work }  from './Work';\r\nimport { Education } from './Education';\r\nimport { PersonalInfo } from './PersonalInfo';\r\nimport { Footer } from './Footer';\r\nimport { NotableProjects } from './NotableProjects';\r\nimport { Graphics } from  '../components/Graphics';\r\nimport './HomePage.css';\r\nimport skills_data_file from  '../data/skills.json';\r\nimport { conditionalExpression } from '@babel/types';\r\n\r\nexport class HomePage extends Component{\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            skills_data:null\r\n        }\r\n        this.state.skills_data = JSON.parse(JSON.stringify(skills_data_file));\r\n       console.log(this.state.skills_data[\"0\"].skillset); \r\n    }\r\n    \r\n    renderSVG(){ \r\n        return(\r\n            <svg width=\"60\" height=\"120\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g>\r\n                <title>background</title>\r\n                <rect fill=\"#ffffff\" id=\"canvas_background\" height=\"122\" width=\"62\" y=\"-1\" x=\"-1\"/>\r\n                <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n                <rect fill=\"url(#gridpattern)\" stroke-width=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n                </g>\r\n                </g>\r\n                <g>\r\n                <title>Layer 1</title>\r\n                <line stroke=\"#00b5ad\" opacity=\"0.65\" stroke-linecap=\"undefined\" stroke-linejoin=\"undefined\" id=\"svg_8\" y2=\"77.62021\" x2=\"30.5\" y1=\"9.437503\" x1=\"30.5\" stroke-width=\"21.5\" fill=\"none\"/>\r\n                <ellipse ry=\"11\" rx=\"11\" id=\"svg_9\" cy=\"93.4375\" cx=\"29.5\" fill-opacity=\"null\" stroke-width=\"21.5\" stroke=\"#00b5ad\" fill=\"none\"/>\r\n                </g>\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(   \r\n            <Container>\r\n                <PersonalInfo/>\r\n                <Work/>\r\n                <Grid centered> \r\n                <Grid.Row >\r\n                   <Graphics connectionType={\"none\"}/>\r\n                </Grid.Row>\r\n                </Grid>\r\n                <Education/>\r\n               \r\n                <Grid centered> \r\n                <Grid.Row >\r\n                   <Graphics connectionType={\"none\"}/>\r\n                </Grid.Row>\r\n                </Grid>\r\n                <NotableProjects/>\r\n\r\n                <Grid.Row centered>\r\n                    <Footer/>\r\n                </Grid.Row>\r\n            </Container>    \r\n        );\r\n    }\r\n}\r\n\r\n\r\n//[]","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons';\nimport { Container } from 'semantic-ui-react';\nimport {HomePage} from './containers/HomePage';\nimport './fonts.css';\nimport './App.css';\n\nfunction App() {\n  library.add(faStroopwafel)\n  return (\n    <div className=\"App\">\n      <Container>\n        <HomePage/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}